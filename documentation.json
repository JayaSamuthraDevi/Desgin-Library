{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "CenteredText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: \"custom-btn\",\n    className: 'sb--btn'\n  }\n}"
            },
            {
                "name": "Colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center;\">\n        <sb-icon name=\"add\" size=\"lg\" color=\"red\"></sb-icon>\n        <sb-icon name=\"add\" size=\"lg\" color=\"green\"></sb-icon>\n        <sb-icon name=\"add\" size=\"lg\" color=\"blue\"></sb-icon>\n        <sb-icon name=\"add\" size=\"lg\" color=\"#ff9900\"></sb-icon>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "CustomName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    appName: 'Customer Portal',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme-demo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"padding: 2rem; font-family: sans-serif;\">\n        <!-- Theme picker -->\n        <color-theme></color-theme>\n\n        <!-- Header -->\n        <sb-header appName=\"Carbon Themed App\"></sb-header>\n\n        <!-- Form -->\n        <div style=\"margin-top: 1.5rem; max-width: 400px;\">\n          <sb-input label=\"Username\" placeholder=\"Enter username\"></sb-input>\n          <sb-input label=\"Password\" type=\"password\" placeholder=\"Enter password\"></sb-input>\n        </div>\n\n        <!-- Buttons -->\n        <div style=\"margin-top: 1.5rem; display: flex; gap: 1rem; flex-wrap: wrap;\">\n          <sb-button label=\"Primary\" variant=\"primary\"></sb-button>\n          <sb-button label=\"Secondary\" variant=\"secondary\"></sb-button>\n          <sb-button label=\"Tertiary\" variant=\"tertiary\"></sb-button>\n          <sb-button label=\"Ghost\" variant=\"ghost\"></sb-button>\n          <sb-button label=\"Danger\" variant=\"danger\"></sb-button>\n          <sb-button label=\"Link\" variant=\"link\"></sb-button>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    appName: 'Carbon POC',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'add' as IconName,\n    size: 'md',\n    color: 'currentColor',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Name',\n    placeholder: 'Enter your name',\n    type: 'text',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <app-modal\n        [isOpen]=\"isOpen\"\n        [title]=\"title\"\n        [size]=\"size\"\n        [cancelLabel]=\"cancelLabel\"\n        [confirmLabel]=\"confirmLabel\"\n        [cancelDisabled]=\"cancelDisabled\"\n        [confirmDisabled]=\"confirmDisabled\"\n        [showFooter]=\"showFooter\"\n        [showDefaultFooter]=\"showDefaultFooter\"\n        (close)=\"close($event)\"\n        (cancel)=\"cancel($event)\"\n        (confirm)=\"confirm($event)\"\n      >\n        <p>This is the body of the modal.</p>\n        <p>You can project <strong>any content</strong> here.</p>\n      </app-modal>\n    `,\n  }),\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Disabled',\n    disabled: true,\n    variant: 'primary',\n  },\n}"
            },
            {
                "name": "IconOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    iconOnly: true,\n    variant: 'primary',\n    iconName: 'add',\n  },\n}"
            },
            {
                "name": "IconPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Add Item',\n    variant: 'primary',\n    iconName: 'add',\n    iconPosition: 'left'\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SbButton>",
                "defaultValue": "{\n  title: 'Carbon/Button',\n  component: SbButton,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [SbButton, SbIcon],\n    }),\n  ],\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['primary', 'secondary', 'tertiary', 'ghost', 'danger', 'link'],\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['xs', 'sm', 'md', 'lg', 'xl'],\n    },\n    iconName: {\n      control: { type: 'select' },\n      options: Object.keys(ICONS) as IconName[],\n    },\n    iconPosition: {\n      control: { type: 'select' },\n      options: ['right', 'left']\n    },\n    iconOnly: { control: 'boolean' },\n    disabled: { control: 'boolean' },\n    expressive: { control: 'boolean' },\n    width: {\n      control: { type: 'select' },\n      options: ['full', 'auto'],\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\n  title: 'Carbon/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [HeaderComponent],\n    }),\n  ],\n  argTypes: {\n    appName: { control: 'text' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SbIcon>",
                "defaultValue": "{\n  title: 'Components/Icon',\n  component: SbIcon,\n  tags: ['autodocs'],\n  argTypes: {\n    name: {\n      control: { type: 'select' },\n      options: Object.keys((await import('./icons')).ICONS) as IconName[],\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg', 'xl', 2, 3, 4], // string presets + numeric\n    },\n    color: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SbInputComponent>",
                "defaultValue": "{\n  title: 'Carbon/Input',\n  component: SbInputComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [SbInputComponent, SbIcon, FormsModule, ReactiveFormsModule],\n    }),\n  ],\n  argTypes: {\n   label: { control: 'text' },\n   value: { control: 'text' },\n   type: { control: 'select', options: ['text', 'email', 'password', 'number'] },\n    placeholder: { control: 'text' },\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    readonly: { control: 'boolean' },\n    disabled: { control: 'boolean' },\n    invalid: { control: 'boolean' },\n    warn: { control: 'boolean' },\n    warnText: { control: 'text' },\n    helperText: { control: 'text' },\n    fluid: { control: 'boolean' },\n    skeleton: { control: 'boolean' },\n    ariaLabel: { control: 'text' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ModalComponent>",
                "defaultValue": "{\n  title: 'Components/Modal',\n  component: ModalComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    isOpen: { control: 'boolean' },\n    title: { control: 'text' },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg', 'xl'],\n    },\n    cancelLabel: { control: 'text' },\n    confirmLabel: { control: 'text' },\n    cancelDisabled: { control: 'boolean' },\n    confirmDisabled: { control: 'boolean' },\n    showFooter: { control: 'boolean' },\n    showDefaultFooter: { control: 'boolean' },\n    close: { action: 'close' },\n    cancel: { action: 'cancel' },\n    confirm: { action: 'confirm' },\n  },\n  args: {\n    isOpen: true,\n    title: 'Example Modal',\n    size: 'md',\n    cancelLabel: 'Cancel',\n    confirmLabel: 'Confirm',\n    cancelDisabled: false,\n    confirmDisabled: false,\n    showFooter: true,\n    showDefaultFooter: true,\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    docs: { autodocs: true },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideZonelessChangeDetection(), // zoneless mode\n      ],\n    }),\n    withThemeByDataAttribute({\n      themes: {\n        White: 'white',\n        G10: 'g10',\n        G90: 'g90',\n        G100: 'g100',\n        Custom1: 'custom-1',\n        Custom2: 'custom-2',\n        Custom3: 'custom-3'\n      },\n      defaultTheme: 'White',\n      attributeName: 'data-carbon-theme',\n      parentSelector: 'html',\n    }),\n  ]\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Primary Button',\n    variant: 'primary',\n    size: 'md',\n  },\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 1rem;\">\n        <sb-button label=\"Small\" size=\"sm\" variant=\"primary\"></sb-button>\n        <sb-button label=\"Medium\" size=\"md\" variant=\"primary\"></sb-button>\n        <sb-button label=\"Large\" size=\"lg\" variant=\"primary\"></sb-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center;\">\n        <sb-icon name=\"add\" size=\"sm\"></sb-icon>\n        <sb-icon name=\"add\" size=\"md\"></sb-icon>\n        <sb-icon name=\"add\" size=\"lg\"></sb-icon>\n        <sb-icon name=\"add\" size=\"xl\"></sb-icon>\n        <sb-icon name=\"add\" [size]=\"2\"></sb-icon>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <sb-input label=\"Small\" size=\"sm\" placeholder=\"Small input\"></sb-input>\n      <sb-input label=\"Medium\" size=\"md\" placeholder=\"Medium input\"></sb-input>\n      <sb-input label=\"Large\" size=\"lg\" placeholder=\"Large input\"></sb-input>\n    `,\n  }),\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ColorThemeComponent>",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "ThemedButtons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 1rem;\">\n      <div data-carbon-theme=\"white\">\n          <sb-button label=\"Carbon Default\" variant=\"primary\"></sb-button>\n        </div>\n        <div data-carbon-theme=\"custom-1\">\n          <sb-button label=\"Fully Curved\" variant=\"primary\"></sb-button>\n        </div>\n        <div data-carbon-theme=\"custom-2\">\n          <sb-button label=\"Light Curves\" variant=\"primary\"></sb-button>\n        </div>\n        <div data-carbon-theme=\"custom-3\">\n          <sb-button label=\"Text Centered with Light Curved\" variant=\"primary\"></sb-button>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "ThemedHeaders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <div data-carbon-theme=\"default\">\n          <carbon-header [appName]=\"'Default Theme'\"></carbon-header>\n        </div>\n        <div data-carbon-theme=\"light-rounded\">\n          <carbon-header [appName]=\"'Light Rounded Theme'\"></carbon-header>\n        </div>\n        <div data-carbon-theme=\"fully-curved\">\n          <carbon-header [appName]=\"'Fully Curved Theme'\"></carbon-header>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "WithCustomFooter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <app-modal\n        [isOpen]=\"isOpen\"\n        [title]=\"title\"\n        [size]=\"size\"\n        [showFooter]=\"true\"\n        [showDefaultFooter]=\"false\"\n        (close)=\"close($event)\"\n        (cancel)=\"cancel($event)\"\n        (confirm)=\"confirm($event)\"\n      >\n        <p>This is the modal body with custom footer.</p>\n\n        <div footer>\n          <button class=\"cds--btn cds--btn--secondary\" (click)=\"cancel($event)\">Custom Cancel</button>\n          <button class=\"cds--btn cds--btn--primary\" (click)=\"confirm($event)\">Custom Confirm</button>\n        </div>\n      </app-modal>\n    `,\n  }),\n}"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Add Item',\n    variant: 'primary',\n    iconName: 'add',\n  },\n}"
            },
            {
                "name": "WithPasswordToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    label: 'Password',\n    placeholder: 'Enter your password',\n    type: 'password',\n  },\n}"
            },
            {
                "name": "WithReactiveForms",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  decorators: [\n    moduleMetadata({\n      imports: [ReactiveFormsModule],\n      providers: [FormBuilder],\n    }),\n  ],\n  render: () => {\n    const fb = new FormBuilder();\n    const form = fb.group({\n      email: ['', { nonNullable: true, validators: [Validators.required, Validators.email] }],\n    });\n    return {\n      props: { form },\n      template: `\n        <form [formGroup]=\"form\" novalidate>\n          <sb-input\n            label=\"Email\"\n            placeholder=\"Enter your email\"\n            type=\"email\"\n            formControlName=\"email\">\n          </sb-input>\n        </form>\n        <p>Form value: {{ form.value | json }}</p>\n        <p>Form valid: {{ form.valid }}</p>\n      `,\n    };\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SbButton>",
                "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme-demo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SbIcon>",
                "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SbInputComponent>",
                "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ModalComponent>",
                "file": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts": [
                {
                    "name": "CenteredText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: \"custom-btn\",\n    className: 'sb--btn'\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Disabled',\n    disabled: true,\n    variant: 'primary',\n  },\n}"
                },
                {
                    "name": "IconOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    iconOnly: true,\n    variant: 'primary',\n    iconName: 'add',\n  },\n}"
                },
                {
                    "name": "IconPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Add Item',\n    variant: 'primary',\n    iconName: 'add',\n    iconPosition: 'left'\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SbButton>",
                    "defaultValue": "{\n  title: 'Carbon/Button',\n  component: SbButton,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [SbButton, SbIcon],\n    }),\n  ],\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['primary', 'secondary', 'tertiary', 'ghost', 'danger', 'link'],\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['xs', 'sm', 'md', 'lg', 'xl'],\n    },\n    iconName: {\n      control: { type: 'select' },\n      options: Object.keys(ICONS) as IconName[],\n    },\n    iconPosition: {\n      control: { type: 'select' },\n      options: ['right', 'left']\n    },\n    iconOnly: { control: 'boolean' },\n    disabled: { control: 'boolean' },\n    expressive: { control: 'boolean' },\n    width: {\n      control: { type: 'select' },\n      options: ['full', 'auto'],\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Primary Button',\n    variant: 'primary',\n    size: 'md',\n  },\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 1rem;\">\n        <sb-button label=\"Small\" size=\"sm\" variant=\"primary\"></sb-button>\n        <sb-button label=\"Medium\" size=\"md\" variant=\"primary\"></sb-button>\n        <sb-button label=\"Large\" size=\"lg\" variant=\"primary\"></sb-button>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "ThemedButtons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 1rem;\">\n      <div data-carbon-theme=\"white\">\n          <sb-button label=\"Carbon Default\" variant=\"primary\"></sb-button>\n        </div>\n        <div data-carbon-theme=\"custom-1\">\n          <sb-button label=\"Fully Curved\" variant=\"primary\"></sb-button>\n        </div>\n        <div data-carbon-theme=\"custom-2\">\n          <sb-button label=\"Light Curves\" variant=\"primary\"></sb-button>\n        </div>\n        <div data-carbon-theme=\"custom-3\">\n          <sb-button label=\"Text Centered with Light Curved\" variant=\"primary\"></sb-button>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Add Item',\n    variant: 'primary',\n    iconName: 'add',\n  },\n}"
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts": [
                {
                    "name": "Colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center;\">\n        <sb-icon name=\"add\" size=\"lg\" color=\"red\"></sb-icon>\n        <sb-icon name=\"add\" size=\"lg\" color=\"green\"></sb-icon>\n        <sb-icon name=\"add\" size=\"lg\" color=\"blue\"></sb-icon>\n        <sb-icon name=\"add\" size=\"lg\" color=\"#ff9900\"></sb-icon>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'add' as IconName,\n    size: 'md',\n    color: 'currentColor',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SbIcon>",
                    "defaultValue": "{\n  title: 'Components/Icon',\n  component: SbIcon,\n  tags: ['autodocs'],\n  argTypes: {\n    name: {\n      control: { type: 'select' },\n      options: Object.keys((await import('./icons')).ICONS) as IconName[],\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg', 'xl', 2, 3, 4], // string presets + numeric\n    },\n    color: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; gap: 1rem; align-items: center;\">\n        <sb-icon name=\"add\" size=\"sm\"></sb-icon>\n        <sb-icon name=\"add\" size=\"md\"></sb-icon>\n        <sb-icon name=\"add\" size=\"lg\"></sb-icon>\n        <sb-icon name=\"add\" size=\"xl\"></sb-icon>\n        <sb-icon name=\"add\" [size]=\"2\"></sb-icon>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts": [
                {
                    "name": "CustomName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    appName: 'Customer Portal',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    appName: 'Carbon POC',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\n  title: 'Carbon/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [HeaderComponent],\n    }),\n  ],\n  argTypes: {\n    appName: { control: 'text' },\n  },\n}"
                },
                {
                    "name": "ThemedHeaders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"display: flex; flex-direction: column; gap: 1rem;\">\n        <div data-carbon-theme=\"default\">\n          <carbon-header [appName]=\"'Default Theme'\"></carbon-header>\n        </div>\n        <div data-carbon-theme=\"light-rounded\">\n          <carbon-header [appName]=\"'Light Rounded Theme'\"></carbon-header>\n        </div>\n        <div data-carbon-theme=\"fully-curved\">\n          <carbon-header [appName]=\"'Fully Curved Theme'\"></carbon-header>\n        </div>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme-demo.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme-demo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"padding: 2rem; font-family: sans-serif;\">\n        <!-- Theme picker -->\n        <color-theme></color-theme>\n\n        <!-- Header -->\n        <sb-header appName=\"Carbon Themed App\"></sb-header>\n\n        <!-- Form -->\n        <div style=\"margin-top: 1.5rem; max-width: 400px;\">\n          <sb-input label=\"Username\" placeholder=\"Enter username\"></sb-input>\n          <sb-input label=\"Password\" type=\"password\" placeholder=\"Enter password\"></sb-input>\n        </div>\n\n        <!-- Buttons -->\n        <div style=\"margin-top: 1.5rem; display: flex; gap: 1rem; flex-wrap: wrap;\">\n          <sb-button label=\"Primary\" variant=\"primary\"></sb-button>\n          <sb-button label=\"Secondary\" variant=\"secondary\"></sb-button>\n          <sb-button label=\"Tertiary\" variant=\"tertiary\"></sb-button>\n          <sb-button label=\"Ghost\" variant=\"ghost\"></sb-button>\n          <sb-button label=\"Danger\" variant=\"danger\"></sb-button>\n          <sb-button label=\"Link\" variant=\"link\"></sb-button>\n        </div>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ColorThemeComponent>",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Name',\n    placeholder: 'Enter your name',\n    type: 'text',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SbInputComponent>",
                    "defaultValue": "{\n  title: 'Carbon/Input',\n  component: SbInputComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [SbInputComponent, SbIcon, FormsModule, ReactiveFormsModule],\n    }),\n  ],\n  argTypes: {\n   label: { control: 'text' },\n   value: { control: 'text' },\n   type: { control: 'select', options: ['text', 'email', 'password', 'number'] },\n    placeholder: { control: 'text' },\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    readonly: { control: 'boolean' },\n    disabled: { control: 'boolean' },\n    invalid: { control: 'boolean' },\n    warn: { control: 'boolean' },\n    warnText: { control: 'text' },\n    helperText: { control: 'text' },\n    fluid: { control: 'boolean' },\n    skeleton: { control: 'boolean' },\n    ariaLabel: { control: 'text' },\n  },\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <sb-input label=\"Small\" size=\"sm\" placeholder=\"Small input\"></sb-input>\n      <sb-input label=\"Medium\" size=\"md\" placeholder=\"Medium input\"></sb-input>\n      <sb-input label=\"Large\" size=\"lg\" placeholder=\"Large input\"></sb-input>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithPasswordToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    label: 'Password',\n    placeholder: 'Enter your password',\n    type: 'password',\n  },\n}"
                },
                {
                    "name": "WithReactiveForms",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  decorators: [\n    moduleMetadata({\n      imports: [ReactiveFormsModule],\n      providers: [FormBuilder],\n    }),\n  ],\n  render: () => {\n    const fb = new FormBuilder();\n    const form = fb.group({\n      email: ['', { nonNullable: true, validators: [Validators.required, Validators.email] }],\n    });\n    return {\n      props: { form },\n      template: `\n        <form [formGroup]=\"form\" novalidate>\n          <sb-input\n            label=\"Email\"\n            placeholder=\"Enter your email\"\n            type=\"email\"\n            formControlName=\"email\">\n          </sb-input>\n        </form>\n        <p>Form value: {{ form.value | json }}</p>\n        <p>Form valid: {{ form.valid }}</p>\n      `,\n    };\n  },\n}"
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <app-modal\n        [isOpen]=\"isOpen\"\n        [title]=\"title\"\n        [size]=\"size\"\n        [cancelLabel]=\"cancelLabel\"\n        [confirmLabel]=\"confirmLabel\"\n        [cancelDisabled]=\"cancelDisabled\"\n        [confirmDisabled]=\"confirmDisabled\"\n        [showFooter]=\"showFooter\"\n        [showDefaultFooter]=\"showDefaultFooter\"\n        (close)=\"close($event)\"\n        (cancel)=\"cancel($event)\"\n        (confirm)=\"confirm($event)\"\n      >\n        <p>This is the body of the modal.</p>\n        <p>You can project <strong>any content</strong> here.</p>\n      </app-modal>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ModalComponent>",
                    "defaultValue": "{\n  title: 'Components/Modal',\n  component: ModalComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    isOpen: { control: 'boolean' },\n    title: { control: 'text' },\n    size: {\n      control: 'select',\n      options: ['sm', 'md', 'lg', 'xl'],\n    },\n    cancelLabel: { control: 'text' },\n    confirmLabel: { control: 'text' },\n    cancelDisabled: { control: 'boolean' },\n    confirmDisabled: { control: 'boolean' },\n    showFooter: { control: 'boolean' },\n    showDefaultFooter: { control: 'boolean' },\n    close: { action: 'close' },\n    cancel: { action: 'cancel' },\n    confirm: { action: 'confirm' },\n  },\n  args: {\n    isOpen: true,\n    title: 'Example Modal',\n    size: 'md',\n    cancelLabel: 'Cancel',\n    confirmLabel: 'Confirm',\n    cancelDisabled: false,\n    confirmDisabled: false,\n    showFooter: true,\n    showDefaultFooter: true,\n  },\n}"
                },
                {
                    "name": "WithCustomFooter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <app-modal\n        [isOpen]=\"isOpen\"\n        [title]=\"title\"\n        [size]=\"size\"\n        [showFooter]=\"true\"\n        [showDefaultFooter]=\"false\"\n        (close)=\"close($event)\"\n        (cancel)=\"cancel($event)\"\n        (confirm)=\"confirm($event)\"\n      >\n        <p>This is the modal body with custom footer.</p>\n\n        <div footer>\n          <button class=\"cds--btn cds--btn--secondary\" (click)=\"cancel($event)\">Custom Cancel</button>\n          <button class=\"cds--btn cds--btn--primary\" (click)=\"confirm($event)\">Custom Confirm</button>\n        </div>\n      </app-modal>\n    `,\n  }),\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    docs: { autodocs: true },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideZonelessChangeDetection(), // zoneless mode\n      ],\n    }),\n    withThemeByDataAttribute({\n      themes: {\n        White: 'white',\n        G10: 'g10',\n        G90: 'g90',\n        G100: 'g100',\n        Custom1: 'custom-1',\n        Custom2: 'custom-2',\n        Custom3: 'custom-3'\n      },\n      defaultTheme: 'White',\n      attributeName: 'data-carbon-theme',\n      parentSelector: 'html',\n    }),\n  ]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SbButton>",
                    "file": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme-demo.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme-demo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SbIcon>",
                    "file": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SbInputComponent>",
                    "file": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ModalComponent>",
                    "file": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CenteredText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemedButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-button/sb-button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme-demo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme-demo.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-color-theme/sb-color-theme.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemedHeaders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-header/sb-header.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-icons/sb-icons.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPasswordToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithReactiveForms",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-input/sb-input.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomFooter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/carbon-angular/src/lib/components/sb-modal/modal.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}